- host: all
  become: true
  vars:
    container_count: 4
    default_container_name: day15_docker
    default_container_image: maazpatel24/day15-webapp:v2.0
    default_container_command: sleep 1

  tasks:
  - name: Install aptitude
    ansible.builtin.apt: name=aptitude state=latest update_cache=true
    tags: [ pkg-installayion ]

  - name: Install required system packages
    ansible.builtin.apt: name={{ item }} update_cache=true state=latest
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
    tags: [ pkg-installayion ]

  - name: Create directory for Docker's GPG key
    ansible.builtin.file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'
    tags: [ Docker-Installation ]

  - name: Add Docker's official GPG key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      keyring: /etc/apt/keyrings/docker.gpg
      state: present
    tags: [ Docker-Installation ]

  - name: Print architecture variables
    ansible.builtin.debug:
      msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"
    tags: [ Docker-Installation ]

  - name: Add Docker repository
    ansible.builtin.apt_repository:
      repo: >-
        deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
        signed-by=/etc/apt/keyrings/docker.gpg]
        https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
      filename: docker
      state: present
    tags: [ Docker-Installation ]

  - name: Install Docker and related packages
    ansible.builtin.apt: name="{{ item }}" state=present update_cache=true
    loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin' ]
    tags: [ Docker-Installation ]

  - name: Add Docker group
    ansible.builtin.group:
      name: docker
      state: present
    tags: [ Docker-configuration ]
  
  - name: Add user to Docker group
    ansible.builtin.user:
      name: "{{ ansible_user }}"
      groups: docker
      append: true
    tags: [ Docker-configuration ]

  - name: Enable and start Docker services
    ansible.builtin.systemd: name="{{ item }}" enabled=true state=started
    loop:
      - docker.service
      - containerd.service
    tags: [ Systemctl-enabled ]

  - name: Pull default Docker image
    community.docker.docker_image:
      name: "{{ default_container_image }}"
      source: pull
    tags: [ Docker-imagePull ]

  - name: Create default containers
    community.docker.docker_container:
      name: "{{ default_container_name }}{{ item }}"
      image: "{{ default_container_image }}"
      command: "{{ default_container_command }}"
      state: present
    with_sequence: count={{ container_count }}
    tags: [ Docker-containerRun ]